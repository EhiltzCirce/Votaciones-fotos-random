---
import { Characters as person } from "@/logic/character"

const firstArray = person.slice(0, 8)
const secondArray = person.slice(8, person.length)
---
<main class="flex flex-col justify-center items-center">

  <div class="hidden md:block">
    <section class="flex justify-center items-center"> 
      <article class="grid grid-cols-3 grid-rows-2 gap-x-10">
        <div class="flex flex-row flex-wrap gap-5 row-start-1 row-end-3">
          {
            firstArray.map(({ id, name, imageSmall }) => (
              <a href={`/character/${id}`} class="character-link relative md:w-32 md:h-20 lg:w-36 lg:h-24">
                <img src={imageSmall} alt={`Imagen del personaje ${name}`}
                  decoding="async"
                  loading="lazy"
                  class="lg:size-28 md:size-24 object-cover rounded-lg -top-5 scale-90 z-10 absolute sm:left-5 lg:left-5 left-0 saturate-0 hover:scale-110 transition hover:saturate-150" 
                  style="mask-image: linear-gradient(black 50%, transparent);"
                  id={`character-${id}`}
                />
                <div class="absolute inset-0 character-link-background"></div>
              </a>
            ))
          }
        </div>
  
        <picture class="flex relative justify-center items-center col-start-2 col-end-3 row-start-1 row-end-3 h-[400px]">
          <img 
            src="/img/Yahir/Yahir-image-presentation.webp"
            transition:name="Character-Yahir"
            alt="Imagen de Emmanuel" id="image-presentation" 
            class="w-auto h-[400px] object-cover transition z-10"
            style="mask-image: linear-gradient(black 50%, transparent);"
          />

          <span id="name-text-big" class='font-Public font-bold skew-y-[-21deg] pointer-events-none text-center absolute bottom-0 left-0 right-0 z-50 mx-auto text-5xl text-blue-300/90'>  </span>
        </picture>

        <div class="flex flex-row flex-wrap gap-5 col-start-3 col-end-4">
          {
            secondArray.map(({ id, name, imageSmall }) => (
              <a href={`/character/${id}`} class="character-link relative md:w-32 md:h-20 lg:w-36 lg:h-24">
                <img src={imageSmall} alt={`Imagen del personaje ${name}`}
                  decoding="async"
                  loading="lazy"
                  class="lg:size-28 md:size-24 object-cover rounded-lg -top-5 scale-95 z-10 absolute sm:left-5 lg:left-5 left-0 saturate-0 hover:scale-110 transition hover:saturate-150" 
                  style="mask-image: linear-gradient(black 50%, transparent);"
                  id={`character-${id}`}
                />
                <div class="absolute inset-0 character-link-background"></div>
              </a>
            ))
          }
        </div>
      </article>
    </section>
  </div>
  
  <div class="md:hidden">
    <picture class="flex relative h-[400px] sm:h-[600px] flex-col justify-center items-center mb-10">
      <img 
        src="/img/Yahir/Yahir-image-presentation.webp"
        transition:name="Character-Yahir"
        alt="Imagen de Emmanuel" 
        class="size-full object-contain transition"
        id="image-presentation-2"
        style="mask-image: linear-gradient(black 50%, transparent);"
      />
      <span id="name-text" class='font-Dancing font-bold skew-y-[-21deg] pointer-events-none text-center absolute bottom-0 left-0 right-0 z-50 mx-auto text-3xl lg:text-3xl text-blue-300/90'>
        
      </span>
    </picture>

    <section class="swiper">
      <div class="swiper-wrapper">
        {
          person.map(({ id, name, imageSmall }) => (
            <div class="swiper-slide">
              <a href={`/character/${id}`} class="character-link relative flex justify-center items-center">
                <img src={imageSmall} alt={`Imagen del personaje ${name}`}
                  decoding="async"
                  loading="lazy"
                  class="size-48  z-10 character-image-presentacion"
                  style="mask-image: linear-gradient(black 50%, transparent);"
                />
                <div class="absolute inset-0 character-link-background"></div>
              </a>
            </div>
          ))
        }
      </div>
      <div class="swiper-pagination"></div>
    </section>
  </div>
  
</main>

<style>
  .swiper {
    width: 300px;
    height: 220px;
  }
  .character-link-background {
    opacity: .25;
    background: linear-gradient(#fff 0%, #ffffff80 30%, #0000 95%);
  }
  .active {
    filter: saturate(150%);
    transform: scale(1.1);
  }
</style>

<script>
  import { $, $$ } from '@/lib/dom-selector'

  const changeCharacterImage = () => {
    const $imageLink = $$('.character-link') as globalThis.NodeListOf<HTMLAnchorElement>
    const $characterPhoto = $('#image-presentation') as HTMLImageElement
    const $nameText = $('#name-text-big') as HTMLSpanElement
    let $lastActiveImage: HTMLImageElement | null = null

    $imageLink.forEach((link) => {
        const id = link.href.split('/').at(-1)
        
        const $characterSmallImage = $$(`#character-${id}`) as globalThis.NodeListOf<HTMLImageElement>

        const characterSrc = `/img/${id}/${id}-image-presentation.webp` ?? '/img/Yahir/Yahir-image-presentation.webp'

        link.addEventListener('mouseenter', () => {

            $nameText.textContent = id

            localStorage.removeItem('lastHoveredImageId');
            if ($lastActiveImage) {
                $lastActiveImage.classList.remove('active');
            }

            $characterPhoto.src = characterSrc
            $characterPhoto.alt = `Imagen de ${id}`

            $characterPhoto.setAttribute('transition:name', `Character-${id}`)

            $characterSmallImage.forEach((image) => image.classList.add('active'))

            $lastActiveImage = $characterSmallImage[0]

            localStorage.setItem('lastHoveredImageId', id)
            localStorage.setItem('lastName', id)
        })

        const lastHoveredImageId = localStorage.getItem('lastHoveredImageId')
        const lastName = localStorage.getItem('lastName')
        if(lastHoveredImageId === id) {
            $characterPhoto.src = characterSrc
            $characterPhoto.setAttribute('transition:name', `Character-${id}`)
            $characterSmallImage.forEach((image) => image.classList.add('active'))
            $nameText.textContent = lastName
        }
    })
  }

  document.addEventListener('astro:page-load', changeCharacterImage)
</script>

<script>
  import Swiper from 'swiper/bundle'
  import { $, $$ } from '@/lib/dom-selector'

  const Carrousel = () => {
    const swiper = new Swiper('.swiper', {
      slidesPerView: 'auto',
      loop: true,
      spaceBetween: 10,
      pagination: {
        el: '.swiper-pagination',
        clickable: false,
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      on: {
        init: function () {
          console.log('Swiper initialized');
        },
        slideChange: function () {
          const activeSlide = this.slides[this.activeIndex];
          const $nameText = $('#name-text');
          const $characterLink = activeSlide?.querySelector('.character-link') as HTMLAnchorElement;
          const id = $characterLink?.href.split('/').at(-1);
          const characterSrc = `/img/${id}/${id}-image-presentation.webp`;
          const $characterPhoto = $('#image-presentation-2') as HTMLImageElement;

          if (!$nameText || !$characterLink) return;

          localStorage.setItem('lastImage', id);
          $characterPhoto.src = characterSrc;
          $nameText.textContent = id;
          $characterPhoto.setAttribute('transition:name', `Character-${id}`);

          const lastHoveredImageId = localStorage.getItem('lastImage');
          if (lastHoveredImageId === id) {
            $characterPhoto.src = characterSrc;
            $characterPhoto.setAttribute('transition:name', `Character-${id}`);
          }
        },
      },
        effect: 'coverflow', 
        coverflowEffect: {
    rotate: 50, 
    stretch: 0,
    depth: 200, 
    modifier: 1,
    slideShadows: true, 
      },
    });

    swiper.init();
  }

  document.addEventListener('astro:page-load', Carrousel);
</script>

