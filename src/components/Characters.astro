---
import { Characters as person } from "@/logic/character"
import SelectYourCharacter from "@/components/SelectYourCharacter.astro"
import SelectCharacterMovil from "@/components/SelectCharacterMovil.astro"
import FallenCharacters from "@/components/FallenCharacters.astro"

const firstArray = person.slice(0, 8)
const secondArray = person.slice(8, person.length)
---
<main class="flex flex-col justify-center items-center">

  <SelectYourCharacter firstArrayCharacters={firstArray} secondArrayCharacters={secondArray} />

  <SelectCharacterMovil characters={person} />

  <FallenCharacters />
</main>

<script>
  import { $, $$ } from '@/lib/dom-selector'

  const changeCharacterImage = () => {
    const $imageLink = $$('.character-link') as globalThis.NodeListOf<HTMLAnchorElement>
    const $characterPhoto = $('#image-presentation') as HTMLImageElement
    const $nameText = $('#name-text-big') as HTMLSpanElement
    let $lastActiveImage: HTMLImageElement | null = null

    const fallenCharacterIDs = ['Ever', 'Alan', 'Rolando'];

    $imageLink.forEach((link) => {
        const { id } = link.dataset ?? null
        const { folder } = link.dataset ?? null
        const $characterSmallImage = $$(`#character-${id}`) as globalThis.NodeListOf<HTMLImageElement>
        const characterSrc = folder ? `/img/${folder}/${id}-image-presentation.webp` : `/img/${id}/${id}-image-presentation.webp`
        const defaultImage = `/img/Yahir/Yahir-image-presentation.webp`
        const isFallenCharacter = fallenCharacterIDs.includes(id);

        link.addEventListener('mouseenter', () => {
            $nameText.textContent = id

            if(localStorage.getItem('lastHoveredImageId')) {
                const lastHoveredImageId = localStorage.getItem('lastHoveredImageId')
                const $lastActiveImage = $$(`#character-${lastHoveredImageId}`) as globalThis.NodeListOf<HTMLImageElement>
                $lastActiveImage.forEach((image) => image.classList.remove('active'))
            } 

            localStorage.removeItem('lastHoveredImageId')
            if ($lastActiveImage) {
                $lastActiveImage.classList.remove('active')
            }

            $characterPhoto.src = characterSrc ?? defaultImage
            $characterPhoto.alt = `Imagen de ${id}`

            if (isFallenCharacter) {
                $characterPhoto.style.filter = 'grayscale(100%)';
                $nameText.classList.add('fallen-character');
                $nameText.classList.remove('text-blue-300/90'); 
            } else {
                $characterPhoto.style.filter = 'none';
                $nameText.classList.remove('fallen-character'); 
                $nameText.classList.add('text-blue-300/90'); 
            }

            $characterPhoto.setAttribute('transition:name', `Character-${id}`)
            $characterSmallImage.forEach((image) => image.classList.add('active'))
            $lastActiveImage = $characterSmallImage[0]

            localStorage.setItem('lastHoveredImageId', id)
            localStorage.setItem('lastName', id)
        })

        const lastHoveredImageId = localStorage.getItem('lastHoveredImageId')
        const lastName = localStorage.getItem('lastName')
        if(lastHoveredImageId === id) {
            $characterPhoto.src = characterSrc ?? defaultImage
            $characterPhoto.setAttribute('transition:name', `Character-${id}`)
            $characterSmallImage.forEach((image) => image.classList.add('active'))
            if (isFallenCharacter) {
                $characterPhoto.style.filter = 'grayscale(100%)';
                $nameText.classList.add('fallen-character');
                $nameText.classList.remove('text-blue-300/90');
            } else {
                $characterPhoto.style.filter = 'none';
                $nameText.classList.remove('fallen-character');
                $nameText.classList.add('text-blue-300/90');
            }
            $nameText.textContent = lastName
        }
    })
}


  document.addEventListener('astro:page-load', changeCharacterImage)
</script>

<script>
  import Swiper from 'swiper/bundle'
  import { $, $$ } from '@/lib/dom-selector'

  const Carrousel = () => {
    const swiper = new Swiper('.swiper', {
      slidesPerView: 2,
      loop: true,
      // freeMode: true,
      spaceBetween: 0,
      centeredSlides: true,
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      on: {
        init: function () {
        },
        slideChange: function () {
          const activeSlide = this.slides[this.activeIndex] as HTMLDivElement
          const $nameText = $('#name-text')
          const $characterLink = activeSlide?.querySelector('.character-link') as HTMLAnchorElement
          const id = $characterLink?.href.split('/').at(-1)
          const characterSrc = `/img/${id}/${id}-image-presentation.webp`
          const $characterPhoto = $('#image-presentation-2') as HTMLImageElement

          if (!$nameText || !$characterLink) return

          localStorage.setItem('lastImage', id)
          $characterPhoto.src = characterSrc
          $nameText.textContent = id
          $characterPhoto.setAttribute('transition:name', `Character-${id}`)

          const lastHoveredImageId = localStorage.getItem('lastImage')
          if (lastHoveredImageId === id) {
            $characterPhoto.src = characterSrc
            $characterPhoto.setAttribute('transition:name', `Character-${id}`)
          }
        },
      },
    })

    swiper.init()
  }

  document.addEventListener('astro:page-load', Carrousel)
</script>

